@use 'sass:math';

@import "../utils.scss";

$title-height: 3rem;
$game-card-height: 8.8rem;
$playbook-card-height: 5rem;

$selection-color: $primary-color;
$done-color: darken($primary-color, 10%);

.new.page {
  @extend %page-size;
  display: flex;
  flex-direction: column;
  justify-content: center;

  > .title {
    color: $primary-color;
    text-align: center;
    font: 2rem 'Cinzel';
    line-height: $title-height;
    height: $title-height;
  }

  > .options {
    @extend %scrolly;
    height: calc(#{$page-height} - #{$title-height});
  }

  &.choose.game .field {
    @extend %round;
    height: $game-card-height;
    margin: $large-gap;
  }

  &.choose.playbook .field {
    @extend %round, %inverted, %show-value;
    height: $playbook-card-height;
    margin: $large-gap;
  }

  .choice {
    @extend %page-size;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: $large-gap;
    padding: $large-gap;

    > .title {
      color: $primary-color;
      text-align: center;
      font: 2rem 'Cinzel';
      line-height: $title-height;
      height: $title-height;
    }

    > .input {
      width: $full !important;
      flex: 1;
      display: flex;
      flex-direction: column;
      overflow: hidden;

      > .input:only-child { height: 100%; }
    }

    textarea {
      @extend %round;
      border: none;
      padding: $small-gap;
      width: $full !important;
      height: $full;
    }

    input {
      @extend %round;
      border: none;
      padding: $small-gap;

      &[type='text'] {
        width: calc(#{$full} - 2*#{$small-gap});
      }
    }
  }

  .field.choice {
    > .options {
      @extend %scrolly;
      width: $full;
      height: calc(#{$page-height} - #{$title-height});
      display: flex;
      flex-direction: column;
      gap: $small-gap;

      .options-collection {
        display: flex;
        gap: $small-gap;

        > * { flex: 1; }
      }

      .field {
        @extend %round;
        @extend %inverted;
        @extend %show-value;
        padding: $small-gap;
        background: inherit;
      }

      > .field, .options-collection > .field {
        background: white;
        &.selected {
          background: $selection-color;
        }
      }
    }
  }

  .type.choice .recommendations {
    display: flex;
    flex-direction: column;
    flex: 1;
    width: $full;
    height: 0;
    gap: $small-gap;

    .title {
      width: $full;
      font: 1rem 'Cinzel';
      color: $primary-color;
      height: 1rem;
      margin: $small-gap 0;
    }

    .options {
      @extend %scrolly;
      flex: 1;
      display: flex;
      gap: $large-gap;
      flex-direction: column;
      width: $full;
    }

    .recommendations-collection {
      display: flex;
      gap: $small-gap;

      > * { flex: 1; }
    }

    .field {
      @extend %round;
      @extend %inverted;
      @extend %show-value;
      padding: $small-gap;

      &.selected {
        background: $selection-color;
      }
    }
  }

  .button {
    margin: 0 $large-gap;
  }

  .assignment.choice .selection {
    display: flex;
    justify-content: space-evenly;
    flex: 1;
    width: calc(#{$full} + #{2*$large-gap});
    height: 0;
    gap: $small-gap;
    padding: 0 $large-gap;

    > * {
      height: $full;
      width: math.div($full, 2);
      display: flex;
      flex-direction: column;
      gap: $small-gap;


      > .field {
        @extend %centering, %square, %show-value;
        background: white;

        &.selected { background: $selection-color; }
        &.done { background: $done-color; }
      }
    }

    .target .field { @extend %show-name; }
  }
}
